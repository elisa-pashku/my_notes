{"ast":null,"code":"var _jsxFileName = \"/Users/elisapashku/Desktop/React/notes_app_react/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport * as uuid from \"uuid\";\nimport \"./App.css\";\nimport NoteForm from \"./Components/NoteForm\";\nimport SingleNote from \"./Components/SingleNote\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nfunction App() {\n  // Declaring state variables\n  const [notes, setNotes] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  const [show, setShow] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [filter, setFilter] = useState(\"\");\n  const [filteredNotes, setFilteredNotes] = useState([]); //array of filtered notes based on filter\n\n  const [select, setSelect] = useState(\"\");\n  useEffect(() => {\n    const sortedList = filteredNotes.sort(function (note1, note2) {\n      if (note1.title < note2.title) {\n        return -1;\n      }\n\n      if (note1.title < note2.title) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [notes, filter]);\n  useEffect(() => {\n    const filteredList = notes.filter(note => note.title.includes(filter));\n    setFilteredNotes(filteredList);\n  }, [filteredNotes, select]); //Getting the value of selected sort\n\n  function handleSelect(event) {\n    setSelect(event.target.value);\n  } // When closing the modal\n\n\n  const handleClose = () => {\n    setShow(false);\n    setEditing(false);\n  }; // Editing of modal\n\n\n  function handleEdit() {\n    setEditing(true);\n  } // Show modal\n\n\n  function handleShow() {\n    setShow(true);\n    setIsClicked(false);\n  } // When you cancel editting a single modal\n\n\n  function handleEditCancel() {\n    setEditing(false);\n  }\n\n  function handleAddNote() {\n    setIsClicked(true);\n  }\n\n  function handleNoteDelete(note) {\n    const newNotesArray = notes.filter(noteIndex => noteIndex.id !== note.id);\n    setShow(false);\n    setNotes(newNotesArray);\n  } // It will update the note\n\n\n  function handleSubmitChanges(note) {\n    let newEdittedNotes = [...notes];\n    const index = newEdittedNotes.findIndex(oldNote => oldNote.id === note.id);\n    newEdittedNotes[index] = note;\n    setNotes(newEdittedNotes);\n    setEditing(false);\n  } // Cancel the form which adds notes\n\n\n  function handleCancel() {\n    setIsClicked(false);\n  }\n\n  function handleFilter(event) {\n    setFilter(event.target.value);\n  } //Adding the note plus id\n\n\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setNotes([...notes, note]);\n    setIsClicked(false);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"My Notes\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"addButton\",\n    onClick: handleAddNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Add new Note\")), isClicked ? /*#__PURE__*/React.createElement(NoteForm, {\n    handleSubmittedNote: handleSubmittedNote,\n    handleCancel: handleCancel,\n    disabled: editing // it doesn't show a specific field\n    ,\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      categories: \"General\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Filter\",\n    value: filter,\n    onChange: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: select,\n    onChange: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Sort A-Z\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Sort Z-A\")))), filteredNotes.map(note => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"singleNote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SingleNote, {\n    note: note,\n    key: note.id,\n    editing: editing,\n    handleEdit: handleEdit,\n    handleClose: handleClose,\n    show: show,\n    handleShow: handleShow,\n    handleEditCancel: handleEditCancel,\n    handleNoteDelete: handleNoteDelete,\n    handleSubmitChanges: handleSubmitChanges,\n    initialValues: {\n      title: note.title,\n      description: note.description,\n      categories: note.categories,\n      id: note.id\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elisapashku/Desktop/React/notes_app_react/src/App.js"],"names":["React","useState","useEffect","uuid","NoteForm","SingleNote","Container","Row","Col","Button","App","notes","setNotes","isClicked","setIsClicked","show","setShow","editing","setEditing","filter","setFilter","filteredNotes","setFilteredNotes","select","setSelect","sortedList","sort","note1","note2","title","filteredList","note","includes","handleSelect","event","target","value","handleClose","handleEdit","handleShow","handleEditCancel","handleAddNote","handleNoteDelete","newNotesArray","noteIndex","id","handleSubmitChanges","newEdittedNotes","index","findIndex","oldNote","handleCancel","handleFilter","handleSubmittedNote","v4","description","categories","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as uuid from \"uuid\";\nimport \"./App.css\";\nimport NoteForm from \"./Components/NoteForm\";\nimport SingleNote from \"./Components/SingleNote\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nfunction App() {\n  // Declaring state variables\n  const [notes, setNotes] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  const [show, setShow] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [filter, setFilter] = useState(\"\");\n  const [filteredNotes, setFilteredNotes] = useState([]); //array of filtered notes based on filter\n  const [select, setSelect] = useState(\"\");\n\n  useEffect(() => {\n    const sortedList = filteredNotes.sort(function (note1, note2) {\n      if (note1.title < note2.title) {\n        return -1;\n      }\n      if (note1.title < note2.title) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [notes, filter]);\n\n  useEffect(() => {\n    const filteredList = notes.filter((note) => note.title.includes(filter));\n    setFilteredNotes(filteredList);\n  }, [filteredNotes, select]);\n\n  //Getting the value of selected sort\n  function handleSelect(event) {\n    setSelect(event.target.value);\n  }\n\n  // When closing the modal\n  const handleClose = () => {\n    setShow(false);\n    setEditing(false);\n  };\n\n  // Editing of modal\n  function handleEdit() {\n    setEditing(true);\n  }\n\n  // Show modal\n  function handleShow() {\n    setShow(true);\n    setIsClicked(false);\n  }\n\n  // When you cancel editting a single modal\n  function handleEditCancel() {\n    setEditing(false);\n  }\n\n  function handleAddNote() {\n    setIsClicked(true);\n  }\n\n  function handleNoteDelete(note) {\n    const newNotesArray = notes.filter((noteIndex) => noteIndex.id !== note.id);\n    setShow(false);\n    setNotes(newNotesArray);\n  }\n\n  // It will update the note\n  function handleSubmitChanges(note) {\n    let newEdittedNotes = [...notes];\n    const index = newEdittedNotes.findIndex(\n      (oldNote) => oldNote.id === note.id\n    );\n    newEdittedNotes[index] = note;\n    setNotes(newEdittedNotes);\n    setEditing(false);\n  }\n\n  // Cancel the form which adds notes\n  function handleCancel() {\n    setIsClicked(false);\n  }\n\n  function handleFilter(event) {\n    setFilter(event.target.value);\n  }\n\n  //Adding the note plus id\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setNotes([...notes, note]);\n    setIsClicked(false);\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"column\">\n          <div className=\"logo\">My Notes</div>\n          <br></br>\n          <div>\n            <Button className=\"addButton\" onClick={handleAddNote}>\n              Add new Note\n            </Button>\n          </div>\n          {isClicked ? (\n            <NoteForm\n              handleSubmittedNote={handleSubmittedNote}\n              handleCancel={handleCancel}\n              disabled={editing} // it doesn't show a specific field\n              initialValues={{\n                title: \"\",\n                description: \"\",\n                categories: \"General\",\n              }}\n            />\n          ) : (\n            <div />\n          )}\n        </Col>\n        <Col>\n          <Row className=\"row\">\n            <Col>\n              <input\n                type=\"text\"\n                placeholder=\"Filter\"\n                value={filter}\n                onChange={handleFilter}\n              />\n            </Col>\n            <Col>\n              <select value={select} onChange={handleSelect}>\n                <option value=\"asc\">Sort A-Z</option>\n                <option value=\"desc\">Sort Z-A</option>\n              </select>\n            </Col>\n          </Row>\n          {filteredNotes.map((note) => (\n            <div className=\"singleNote\">\n              <SingleNote\n                note={note}\n                key={note.id}\n                editing={editing}\n                handleEdit={handleEdit}\n                handleClose={handleClose}\n                show={show}\n                handleShow={handleShow}\n                handleEditCancel={handleEditCancel}\n                handleNoteDelete={handleNoteDelete}\n                handleSubmitChanges={handleSubmitChanges}\n                initialValues={{\n                  title: note.title,\n                  description: note.description,\n                  categories: note.categories,\n                  id: note.id,\n                }}\n              />\n            </div>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}