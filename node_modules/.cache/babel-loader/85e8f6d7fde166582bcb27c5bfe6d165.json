{"ast":null,"code":"var _jsxFileName = \"/Users/elisapashku/Desktop/React/notes_app_react/src/App.js\";\nimport React, { useState } from \"react\";\nimport * as uuid from \"uuid\";\nimport \"./App.css\";\nimport NoteForm from \"./Components/NoteForm\";\nimport SingleNote from \"./Components/SingleNote\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nfunction App() {\n  // Declaring state variables\n  const [notes, setNotes] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  const [show, setShow] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [filter, setFilter] = useState(\"\"); // When closing the modal\n\n  const handleClose = () => {\n    setShow(false);\n    setEditing(false);\n  }; // Editing of modal\n\n\n  function handleEdit() {\n    setEditing(true);\n  } // Show modal\n\n\n  function handleShow() {\n    setShow(true);\n    setIsClicked(false);\n  } // When you cancel editting a single modal\n\n\n  function handleEditCancel() {\n    setEditing(false);\n  }\n\n  function handleAddNote() {\n    setIsClicked(true);\n  }\n\n  function handleNoteDelete(note) {\n    const newNotesArray = notes.filter(noteIndex => noteIndex.id !== note.id);\n    setShow(false);\n    setNotes(newNotesArray);\n  } // It will update the note\n\n\n  function handleSubmitChanges(note) {\n    let newEdittedNotes = [...notes];\n    const index = newEdittedNotes.findIndex(oldNote => oldNote.id === note.id);\n    newEdittedNotes[index] = note;\n    setNotes(newEdittedNotes);\n    setEditing(false);\n  } // Cancel the form which adds notes\n\n\n  function handleCancel() {\n    setIsClicked(false);\n  }\n\n  function handleFilter(event) {\n    setFilter(event.target.value);\n    const filteredList = notes.filter(note => note.title.contains(filter));\n    console.log(filteredList);\n  } //Adding the note plus id\n\n\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setNotes([...notes, note]);\n    setIsClicked(false);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"My Notes\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"addButton\",\n    onClick: handleAddNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Add new Note\")), isClicked ? /*#__PURE__*/React.createElement(NoteForm, {\n    handleSubmittedNote: handleSubmittedNote,\n    handleCancel: handleCancel,\n    disabled: editing // it doesn't show a specific field\n    ,\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      categories: \"General\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Filter\",\n    value: filter,\n    onChange: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })), notes.map(note => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"singleNote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SingleNote, {\n    note: note,\n    key: note.id,\n    editing: editing,\n    handleEdit: handleEdit,\n    handleClose: handleClose,\n    show: show,\n    handleShow: handleShow,\n    handleEditCancel: handleEditCancel,\n    handleNoteDelete: handleNoteDelete,\n    handleSubmitChanges: handleSubmitChanges,\n    initialValues: {\n      title: note.title,\n      description: note.description,\n      categories: note.categories,\n      id: note.id\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elisapashku/Desktop/React/notes_app_react/src/App.js"],"names":["React","useState","uuid","NoteForm","SingleNote","Container","Row","Col","Button","App","notes","setNotes","isClicked","setIsClicked","show","setShow","editing","setEditing","filter","setFilter","handleClose","handleEdit","handleShow","handleEditCancel","handleAddNote","handleNoteDelete","note","newNotesArray","noteIndex","id","handleSubmitChanges","newEdittedNotes","index","findIndex","oldNote","handleCancel","handleFilter","event","target","value","filteredList","title","contains","console","log","handleSubmittedNote","v4","description","categories","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as uuid from \"uuid\";\nimport \"./App.css\";\nimport NoteForm from \"./Components/NoteForm\";\nimport SingleNote from \"./Components/SingleNote\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nfunction App() {\n  // Declaring state variables\n  const [notes, setNotes] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  const [show, setShow] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [filter, setFilter] = useState(\"\");\n\n  // When closing the modal\n  const handleClose = () => {\n    setShow(false);\n    setEditing(false);\n  };\n\n  // Editing of modal\n  function handleEdit() {\n    setEditing(true);\n  }\n\n  // Show modal\n  function handleShow() {\n    setShow(true);\n    setIsClicked(false);\n  }\n\n  // When you cancel editting a single modal\n  function handleEditCancel() {\n    setEditing(false);\n  }\n\n  function handleAddNote() {\n    setIsClicked(true);\n  }\n\n  function handleNoteDelete(note) {\n    const newNotesArray = notes.filter((noteIndex) => noteIndex.id !== note.id);\n    setShow(false);\n    setNotes(newNotesArray);\n  }\n\n  // It will update the note\n  function handleSubmitChanges(note) {\n    let newEdittedNotes = [...notes];\n    const index = newEdittedNotes.findIndex(\n      (oldNote) => oldNote.id === note.id\n    );\n    newEdittedNotes[index] = note;\n    setNotes(newEdittedNotes);\n    setEditing(false);\n  }\n\n  // Cancel the form which adds notes\n  function handleCancel() {\n    setIsClicked(false);\n  }\n\n  function handleFilter(event) {\n    setFilter(event.target.value);\n    const filteredList = notes.filter((note) => note.title.contains(filter));\n    console.log(filteredList);\n  }\n\n  //Adding the note plus id\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setNotes([...notes, note]);\n    setIsClicked(false);\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"column\">\n          <div className=\"logo\">My Notes</div>\n          <br></br>\n          <div>\n            <Button className=\"addButton\" onClick={handleAddNote}>\n              Add new Note\n            </Button>\n          </div>\n          {isClicked ? (\n            <NoteForm\n              handleSubmittedNote={handleSubmittedNote}\n              handleCancel={handleCancel}\n              disabled={editing} // it doesn't show a specific field\n              initialValues={{\n                title: \"\",\n                description: \"\",\n                categories: \"General\",\n              }}\n            />\n          ) : (\n            <div />\n          )}\n        </Col>\n        <Col>\n          <Row>\n            <Col>\n              <input\n                type=\"text\"\n                placeholder=\"Filter\"\n                value={filter}\n                onChange={handleFilter}\n              />\n            </Col>\n            <Col></Col>\n          </Row>\n          {notes.map((note) => (\n            <div className=\"singleNote\">\n              <SingleNote\n                note={note}\n                key={note.id}\n                editing={editing}\n                handleEdit={handleEdit}\n                handleClose={handleClose}\n                show={show}\n                handleShow={handleShow}\n                handleEditCancel={handleEditCancel}\n                handleNoteDelete={handleNoteDelete}\n                handleSubmitChanges={handleSubmitChanges}\n                initialValues={{\n                  title: note.title,\n                  description: note.description,\n                  categories: note.categories,\n                  id: note.id,\n                }}\n              />\n            </div>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}