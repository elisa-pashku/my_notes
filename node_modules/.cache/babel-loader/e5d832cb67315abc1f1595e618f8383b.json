{"ast":null,"code":"var _jsxFileName = \"/Users/elisapashku/Desktop/React/notes_app_react/src/Components/NoteForm.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Alert from \"react-bootstrap/Alert\";\nimport \"../NoteForm.css\";\nexport default function NoteForm(props) {\n  const formik = useFormik({\n    // To keep the values of the note when editing in the modal\n    initialValues: props.initialValues,\n    // Responsible for input validation\n    validationSchema: Yup.object().shape({\n      title: Yup.string().max(10, \"Max number of characters\").required(\"Provide the title\"),\n      description: \"\",\n      categories: \"\"\n    }),\n    // When submitted, the note will be passed as props and the form will be reset\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      props.handleSubmittedNote(formik.values);\n      resetForm({\n        values: \"\"\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    type: \"text\",\n    placeholder: \"Title\",\n    onChange: formik.handleChange,\n    value: formik.values.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"categories\",\n    placeholder: \"categories\",\n    onChange: formik.handleChange,\n    value: formik.values.categories,\n    hidden: props.disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"General\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"General\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Computer Networks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Computer Networks\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Digital Logic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Digital Logic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Data Structures\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Data Structures\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    type: \"text\",\n    placeholder: \"Description\",\n    onChange: formik.handleChange,\n    value: formik.values.description,\n    rows: \"4\",\n    cols: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, formik.errors.title ? /*#__PURE__*/React.createElement(Alert, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, formik.errors.title) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div \",\n    hidden: props.disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: formik.resetForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: props.handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n}","map":{"version":3,"sources":["/Users/elisapashku/Desktop/React/notes_app_react/src/Components/NoteForm.js"],"names":["React","useFormik","Yup","Alert","NoteForm","props","formik","initialValues","validationSchema","object","shape","title","string","max","required","description","categories","onSubmit","values","resetForm","handleSubmittedNote","handleSubmit","handleChange","disabled","errors","handleCancel"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Alert from \"react-bootstrap/Alert\";\nimport \"../NoteForm.css\";\n\nexport default function NoteForm(props) {\n  const formik = useFormik({\n    // To keep the values of the note when editing in the modal\n    initialValues: props.initialValues,\n\n    // Responsible for input validation\n    validationSchema: Yup.object().shape({\n      title: Yup.string()\n        .max(10, \"Max number of characters\")\n        .required(\"Provide the title\"),\n      description: \"\",\n      categories: \"\",\n    }),\n\n    // When submitted, the note will be passed as props and the form will be reset\n    onSubmit: (values, { resetForm }) => {\n      props.handleSubmittedNote(formik.values);\n      resetForm({ values: \"\" });\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <br></br>\n      <br></br>\n\n      <div className=\"div \">\n        <input\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          value={formik.values.title}\n        />\n      </div>\n      <div className=\"div \">\n        <select\n          name=\"categories\"\n          placeholder=\"categories\"\n          onChange={formik.handleChange}\n          value={formik.values.categories}\n          hidden={props.disabled}\n        >\n          <option value=\"General\">General</option>\n          <option value=\"Computer Networks\">Computer Networks</option>\n          <option value=\"Digital Logic\">Digital Logic</option>\n          <option value=\"Data Structures\">Data Structures</option>\n        </select>\n      </div>\n      <div className=\"div \">\n        <textarea\n          name=\"description\"\n          type=\"text\"\n          placeholder=\"Description\"\n          onChange={formik.handleChange}\n          value={formik.values.description}\n          rows=\"4\"\n          cols=\"40\"\n        />\n      </div>\n      <div>\n        {formik.errors.title ? (\n          <Alert color=\"primary\">{formik.errors.title}</Alert>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"div \" hidden={props.disabled}>\n        <button type=\"submit\" onClick={formik.handleSubmit}>\n          Submit\n        </button>\n        <button type=\"button\" onClick={formik.resetForm}>\n          Reset\n        </button>\n        <button type=\"button\" onClick={props.handleCancel}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}