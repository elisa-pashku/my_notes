{"ast":null,"code":"var _jsxFileName = \"/Users/elisapashku/Desktop/React/notes_app_react/src/App.js\";\nimport React, { useState } from \"react\";\nimport uuid from \"uuid\";\nimport \"./App.css\";\nimport NoteForm from \"./Components/NoteForm\";\n\nfunction App() {\n  // Declaring state variables\n  const [newNoteObject, setNoteObject] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [isClicked, setIsClicked] = useState(false);\n\n  function handleAddNote() {\n    setIsClicked(true);\n  } // Function for searching notes\n\n\n  function handleSearch() {}\n\n  function handleSort() {}\n\n  function handleViewdetails() {}\n\n  function handleDelete() {}\n\n  function handleSubmittedNote(note) {\n    note.id = new uuid();\n    console.log(note);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"My Notes\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Add new Note\"), isClicked ? /*#__PURE__*/React.createElement(NoteForm, {\n    handleSubmittedNote: handleSubmittedNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elisapashku/Desktop/React/notes_app_react/src/App.js"],"names":["React","useState","uuid","NoteForm","App","newNoteObject","setNoteObject","notes","setNotes","id","setId","title","setTitle","description","setDescription","category","setCategory","isClicked","setIsClicked","handleAddNote","handleSearch","handleSort","handleViewdetails","handleDelete","handleSubmittedNote","note","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,aAAD,EAAgBC,aAAhB,IAAiCL,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,EAAD,EAAKC,KAAL,IAAcT,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASkB,aAAT,GAAyB;AACvBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAZY,CAcb;;;AACA,WAASE,YAAT,GAAwB,CAAE;;AAC1B,WAASC,UAAT,GAAsB,CAAE;;AAExB,WAASC,iBAAT,GAA6B,CAAE;;AAC/B,WAASC,YAAT,GAAwB,CAAE;;AAC1B,WAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AACjCA,IAAAA,IAAI,CAAChB,EAAL,GAAU,IAAIP,IAAJ,EAAV;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AAAQ,IAAA,OAAO,EAAEN,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGF,SAAS,gBACR,oBAAC,QAAD;AAAU,IAAA,mBAAmB,EAAEO,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF;AAWD;;AAED,eAAepB,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport uuid from \"uuid\";\n\nimport \"./App.css\";\nimport NoteForm from \"./Components/NoteForm\";\n\nfunction App() {\n  // Declaring state variables\n  const [newNoteObject, setNoteObject] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [isClicked, setIsClicked] = useState(false);\n\n  function handleAddNote() {\n    setIsClicked(true);\n  }\n\n  // Function for searching notes\n  function handleSearch() {}\n  function handleSort() {}\n\n  function handleViewdetails() {}\n  function handleDelete() {}\n  function handleSubmittedNote(note) {\n    note.id = new uuid();\n    console.log(note);\n  }\n\n  return (\n    <div className=\"App\">\n      My Notes\n      <button onClick={handleAddNote}>Add new Note</button>\n      {isClicked ? (\n        <NoteForm handleSubmittedNote={handleSubmittedNote} />\n      ) : (\n        <div />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}