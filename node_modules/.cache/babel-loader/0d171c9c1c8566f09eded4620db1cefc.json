{"ast":null,"code":"var _jsxFileName = \"/Users/elisapashku/Desktop/React/notes_app_react/src/App.js\";\nimport React, { useState } from \"react\";\nimport * as uuid from \"uuid\";\nimport \"./App.css\";\nimport NoteForm from \"./Components/NoteForm\";\nimport SingleNote from \"./Components/SingleNote\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nfunction App() {\n  // Declaring state variables\n  const [notes, setNotes] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  const [show, setShow] = useState(false);\n  const [editing, setEditing] = useState(false); // When closing the modal\n\n  const handleClose = () => {\n    setShow(false);\n    setEditing(false);\n  }; // Editing of modal\n\n\n  function handleEdit() {\n    setEditing(true);\n  } // Show modal\n\n\n  function handleShow() {\n    setShow(true);\n  }\n\n  function handleEditCancel() {\n    setEditing(false);\n  }\n\n  function handleAddNote() {\n    setIsClicked(true);\n  } // Cancel the form which adds notes\n\n\n  function handleCancel() {\n    setIsClicked(false);\n  } // Function for searching notes\n\n\n  function handleSearch() {}\n\n  function handleSort() {}\n\n  function handleViewdetails() {}\n\n  function handleDelete() {} //Adding the note plus id\n\n\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setNotes([...notes, note]);\n    setIsClicked(false);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, notes.map(note => /*#__PURE__*/React.createElement(SingleNote, {\n    note: note,\n    key: note.id,\n    editing: editing,\n    handleEdit: handleEdit,\n    handleClose: handleClose,\n    show: show,\n    handleShow: handleShow,\n    initialValues: {\n      title: note.title,\n      description: note.description,\n      categories: note.categories\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"My Notes\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"addButton\",\n    onClick: handleAddNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Add new Note\")), isClicked ? /*#__PURE__*/React.createElement(NoteForm, {\n    handleSubmittedNote: handleSubmittedNote,\n    handleCancel: handleCancel,\n    disabled: editing // it doesn't show a specific field\n    ,\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      categories: \"General\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elisapashku/Desktop/React/notes_app_react/src/App.js"],"names":["React","useState","uuid","NoteForm","SingleNote","Container","Row","Col","Button","App","notes","setNotes","isClicked","setIsClicked","show","setShow","editing","setEditing","handleClose","handleEdit","handleShow","handleEditCancel","handleAddNote","handleCancel","handleSearch","handleSort","handleViewdetails","handleDelete","handleSubmittedNote","note","id","v4","map","title","description","categories"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,iBAA5C;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC,CALa,CAOb;;AACA,QAAMiB,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD,CARa,CAYb;;;AACA,WAASE,UAAT,GAAsB;AACpBF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAfY,CAgBb;;;AACA,WAASG,UAAT,GAAsB;AACpBL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAED,WAASM,gBAAT,GAA4B;AAC1BJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,WAASK,aAAT,GAAyB;AACvBT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GA3BY,CA6Bb;;;AACA,WAASU,YAAT,GAAwB;AACtBV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAhCY,CAkCb;;;AACA,WAASW,YAAT,GAAwB,CAAE;;AAC1B,WAASC,UAAT,GAAsB,CAAE;;AAExB,WAASC,iBAAT,GAA6B,CAAE;;AAC/B,WAASC,YAAT,GAAwB,CAAE,CAvCb,CAyCb;;;AACA,WAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AACjCA,IAAAA,IAAI,CAACC,EAAL,GAAU5B,IAAI,CAAC6B,EAAL,EAAV;AACApB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWmB,IAAX,CAAD,CAAR;AACAhB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACsB,GAAN,CAAWH,IAAD,iBACT,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,GAAG,EAAEA,IAAI,CAACC,EAFZ;AAGE,IAAA,OAAO,EAAEd,OAHX;AAIE,IAAA,UAAU,EAAEG,UAJd;AAKE,IAAA,WAAW,EAAED,WALf;AAME,IAAA,IAAI,EAAEJ,IANR;AAOE,IAAA,UAAU,EAAEM,UAPd;AAQE,IAAA,aAAa,EAAE;AACba,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KADC;AAEbC,MAAAA,WAAW,EAAEL,IAAI,CAACK,WAFL;AAGbC,MAAAA,UAAU,EAAEN,IAAI,CAACM;AAHJ,KARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,eAmBE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAEb,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAHF,EAQGV,SAAS,gBACR,oBAAC,QAAD;AACE,IAAA,mBAAmB,EAAEgB,mBADvB;AAEE,IAAA,YAAY,EAAEL,YAFhB;AAGE,IAAA,QAAQ,EAAEP,OAHZ,CAGqB;AAHrB;AAIE,IAAA,aAAa,EAAE;AACbiB,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,WAAW,EAAE,EAFA;AAGbC,MAAAA,UAAU,EAAE;AAHC,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAYR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CAnBF,CADF,CADF;AA+CD;;AAED,eAAe1B,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as uuid from \"uuid\";\nimport \"./App.css\";\nimport NoteForm from \"./Components/NoteForm\";\nimport SingleNote from \"./Components/SingleNote\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nfunction App() {\n  // Declaring state variables\n  const [notes, setNotes] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  const [show, setShow] = useState(false);\n  const [editing, setEditing] = useState(false);\n\n  // When closing the modal\n  const handleClose = () => {\n    setShow(false);\n    setEditing(false);\n  };\n  // Editing of modal\n  function handleEdit() {\n    setEditing(true);\n  }\n  // Show modal\n  function handleShow() {\n    setShow(true);\n  }\n\n  function handleEditCancel() {\n    setEditing(false);\n  }\n\n  function handleAddNote() {\n    setIsClicked(true);\n  }\n\n  // Cancel the form which adds notes\n  function handleCancel() {\n    setIsClicked(false);\n  }\n\n  // Function for searching notes\n  function handleSearch() {}\n  function handleSort() {}\n\n  function handleViewdetails() {}\n  function handleDelete() {}\n\n  //Adding the note plus id\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setNotes([...notes, note]);\n    setIsClicked(false);\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {notes.map((note) => (\n            <SingleNote\n              note={note}\n              key={note.id}\n              editing={editing}\n              handleEdit={handleEdit}\n              handleClose={handleClose}\n              show={show}\n              handleShow={handleShow}\n              initialValues={{\n                title: note.title,\n                description: note.description,\n                categories: note.categories,\n              }}\n            />\n          ))}\n        </Col>\n        <Col className=\"column\">\n          <div className=\"logo\">My Notes</div>\n          <br></br>\n          <div>\n            <Button className=\"addButton\" onClick={handleAddNote}>\n              Add new Note\n            </Button>\n          </div>\n          {isClicked ? (\n            <NoteForm\n              handleSubmittedNote={handleSubmittedNote}\n              handleCancel={handleCancel}\n              disabled={editing} // it doesn't show a specific field\n              initialValues={{\n                title: \"\",\n                description: \"\",\n                categories: \"General\",\n              }}\n            />\n          ) : (\n            <div />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}